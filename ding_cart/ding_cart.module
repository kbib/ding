<?php

/**
 * Implementation of hook_menu().
 */
function ding_cart_menu() {
  $items = array();

  $items['ding/cart/add/%'] = array(
    'title' => 'Add item to cart',
    'page callback' => 'ding_cart_page_add_to_cart',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'file' => 'ding_cart.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function ding_cart_theme($existing, $type, $theme, $path) {
  return array(
    'ding_cart_item' => array(
      'arguments' => array('item' => NULL),
      'file' => 'ding_cart.theme.inc',
    ),
    'ding_cart_reservation_buttons' => array(
      'arguments' => array('object' => NULL),
      'file' => 'ding_cart.theme.inc',
    ),
    'ding_cart_list_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Implementation of hook_ting_object_buttons().
 */
/**
 * Theme function to render reservation buttons for a TingClientObject.
 *
 * @param TingClientObject $object
 * @return string
 *
 * // TODO Not all library systems may support reservations - refactor this to use hook or form_alter
 */
function ding_cart_ting_object_buttons($object) {
  if (!empty($object->localId) && ting_object_is($object, 'cartable')) {
    // TODO: Check if item is reserved/in basket already.
    drupal_add_js(drupal_get_path('module', 'ding_cart') . '/ding_cart.buttons.js');
    return array(
      array(
        'data' => l(t('Add to cart'), 'ding/cart/add/'  . $object->localId),
        'class' => 'add-to-cart'
      )
    );
  }
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function ding_cart_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function ding_cart_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Helper function to add a TingClientObject to the Ding cart.
 *
 * @param TingClientObject $object
 * @return mixed
 *    The return value of drupal_write_record for the cart item.
 */
function ding_cart_add_ting_object($object) {
  // Create an array of the item to save.
  $cart_item = array(
    'uid' => $GLOBALS['user']->uid,
    'local_id' => $object->localId,
    'ting_id' => $object->id,
    'created' => $_SERVER['REQUEST_TIME'],
    'title' => $object->title,
    'author' => $object->creators[0],
    'type' => $object->type,
    'thumbnail_url' => $object->additionalInformation->thumbnailUrl,
  );

  // Save the item to the cart table.
  return drupal_write_record('ding_cart', $cart_item);
}

/**
 * Get cart item count for user.
 *
 * @param stdClass $account
 *    User object.
 * return integer
 *    Item count.
 */
function ding_cart_user_count($account) {
  return db_result(db_query("SELECT COUNT(local_id) FROM {ding_cart} WHERE uid = %d", $account->uid));
}

/**
 * Theme function for Ding cart form.
 *
 * This has to be in the module file to get loaded properly. The theme
 * system's support for external files is still lacking for preprocess
 * hooks and overriding theme functions.
 */
function theme_ding_cart_list_form($form) {
  $header = array(t('Select'), '', t('Title'));
  $rows = array();
  $output = '';
  $wait = $form['wait_time']['#value'];

  foreach ($form['cart']['#value'] as $item) {
    $cells = array();

    $cells['checkbox'] = array(
      'class' => 'checkbox',
      'data' => drupal_render($form['selected'][$item['local_id']]),
    );

    $image_url = ting_covers_faust_url($item['local_id'], '80_x');
    $cells['image'] = array(
      'class' => 'image',
      'data' => ($image_url) ? theme('image', $image_url, '', '', NULL, FALSE) : '',
    );

    $cells['title'] = array(
      'class' => 'title',
      'data' => theme('ding_cart_item', $item),
    );

    $rows[] = $cells;
  }

  if (empty($rows)) {
    return t('The cart is empty.');
  }

  $output .= theme('table', $header, $rows);
  $output .= drupal_render($form);
  return $output;
}

/**
 * Detect if a request wants a JSON-response, usually for AHAH.
 */
function ding_cart_detect_ahah() {
  return (isset($_SERVER['HTTP_ACCEPT']) && (strpos($_SERVER['HTTP_ACCEPT'], 'application/json')) || (strpos($_SERVER['HTTP_ACCEPT'], 'text/javascript')));
}

/**
 * Remove an item from the cart.
 */
function ding_cart_remove_item($account, $local_id) {
  db_query("DELETE FROM {ding_cart} WHERE uid = %d AND local_id = '%s';", $account->uid, $local_id);
}

