<?php

/**
 * @file ding_cart.install
 * Installation and upgrade hooks for the ding_cart module.
 */

/**
 * Implementation of hook_install().
 */
function ding_cart_install() {
  drupal_install_schema('ding_cart');
  
  $sandbox = array();
  do {
    //Migrate data from alma_cart
    $result = ding_cart_update_6000($sandbox);
  } while ($result['#finished'] != 1);
}

/**
 * Implementation of hook_uninstall().
 */
function ding_cart_uninstall() {
  drupal_uninstall_schema('ding_cart');
}

/**
 * Implementation of hook_schema().
 */
function ding_cart_schema() {
  $schema = array();

  $schema['ding_cart'] = array(
    'description' => t('Keep track of the userâ€™s cart.'),
    'fields' => array(
      'uid' => array(
        'description' => t('{users}.uid for user'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'local_id' => array(
        'description' => t('Local ID in Ting lingo.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'ting_id' => array(
        'description' => t('Ting ID â€“Â used to look up data from Ting.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => t('Timestamp for when this record was created.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => t('The title for this record'),
        'type' => 'varchar',
        'length' => 255,
      ),
      'author' => array(
        'description' => t('The author name for this record'),
        'type' => 'varchar',
        'length' => 255,
      ),
      'type' => array(
        'description' => t('The record type - book, DVD, magnaprint, etc.'),
        'type' => 'varchar',
        'length' => 255,
      ),
      'thumbnail_url' => array(
        'description' => t('The thumbnail URL for this record'),
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
    'primary key' => array('uid', 'local_id'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  return $schema;
}

/**
 * Migrate data from alma_cart.
 */
function ding_cart_update_6000(&$sandbox) {
  $ret = array();
  
  //Meta work
  if (!isset($sandbox['total'])) {
    $sandbox['total'] = db_result(db_query('SELECT COUNT(*) FROM {alma_cart}'));
  }

  $alma_carts = db_query_range("SELECT uid, alma_id, ting_id, created, title, author, type, thumbnail_url FROM {alma_cart} ORDER BY uid ASC", 0, 500);
  while ($cart = db_fetch_object($alma_carts)) {
    //Transfer record from alma_cart to ding_cart 
    db_query("INSERT INTO {ding_cart} (uid, local_id, ting_id, created, title, author, type, thumbnail_url) 
              VALUES (%d, %d, '%s', %d, '%s', '%s', '%s', '%s')",
              array($cart->uid, $cart->alma_id, $cart->ting_id, $cart->created,
                    $cart->title, $cart->author, $cart->type, $cart->thumbnail_url));
    
    //Delete existing record
    db_query("DELETE FROM {alma_cart} WHERE uid = %d AND alma_id = %d", $cart->uid, $cart->alma_id);
  }
  
  //More meta work...
  $remaining = db_result(db_query('SELECT COUNT(*) FROM {alma_cart}'));
  $sandbox['done'] = $sandbox['total'] - $remaining;

  $ret['#finished'] = empty($sandbox['total']) ? 1 : ($sandbox['done'] / $sandbox['total']);

  if ($ret['#finished'] == 1) {
    // Finally, drop the table.
    $ret[] = db_drop_table($ret, 'alma_cart');
  }

  return $ret;  
}

/**
 * Make varchar columns nullable if they have no default value and are 
 * not required.
 */
function ding_cart_update_6001(&$sandbox) {
  $ret = array();

  foreach (array('title', 'author', 'type', 'thumbnail_url') as $fieldname) {
    db_change_field($ret, 'ding_cart', $fieldname, $fieldname, array(
      'type' => 'varchar',
      'length' => 255,
    ));
  }

  return $ret;
}

